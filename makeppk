#!/bin/bash
#

# Checking if user name is given and setting a group
inew_student=$1
user_grp=$2

if [ -z $new_student ]; then printf "Usage: $0 [x12345678] [group] \nx12345678 - user login \ngroup - user group\nExit...\n"; exit 9; fi
if [ -z $user_grp ]
    then
	answer="initializing variable"    # to accept [Enter] as an answer

	while ! [[ $answer =~ ^(''|y|yes|Y|Yes|n|N|no|No)$ ]] 
	do
	  printf "user name = group name? [Y/n] "
	  read -r answer
	done 

	if [[ $answer = [yY] || $answer == [yY][eE][sS] || $answer = '' ]]; then user_grp=$new_student
	else answer="initializing again" # not to have the old aswer for the new question 
	     while ! [[ $answer =~ ^(''|y|yes|Y|Yes|n|N|no|No)$ ]] 
	     do
  		printf "group = 'student'? [Y/n] "
  		read -r answer
	     done
	     if [[ $answer = [yY] || $answer == [yY][eE][sS] || $answer = '' ]]; then user_grp="student"
	     else read -p "Enter the group: " user_grp
		if [ -z $user_grp ]
		then printf "Error:\nUsage: $0 [x12345678] [group] \nx12345678 - user login \ngroup - user group\nExit...\n"; exit 9; fi
	     fi
        fi
fi

# we have user name and group declared.
# if user exists does he have .ssh directory? if no lets create 

student_dir="/home/"$new_student"/.ssh"

# if new user exists the group exists too
# if user is new needs to check group existance 

if [ !$(id -u $new_student >/dev/null 2>&1) ]; then 
	echo "new user:" $new_student 
	if grep -q $user_grp /etc/group
		then echo $user_grp " group exists"
	else 
		groupadd $user_grp; echo $user_grp "group added"		
	fi
	useradd -g $user_grp -m $new_student
else echo "user " $new_student " exists"
	user_grp=$(id -gn $new_student)
fi

student_dir="/home/"$new_student"/.ssh"

# checking if user has a directory /.ssh in his home dir.
if [ ! -d $student_dir ]; then
	mkdir $student_dir
	chown -R $new_student:$user_grp $student_dir
fi

host_name=$(hostname) 
putty_user=$new_student"@"$host_name           # will make "x00158589@hostname" format username for puttygen

# generates the code - need to wait
echo "wait, working..."

puttygen -t rsa -b 2048 -C $putty_user -o $student_login.ppk
puttygen -L $new_student.ppk >> $student_dir"/authorized_keys"
chown $new_student:$user_grp $student_dir"/authorized_keys"

puttygen $new_student.ppk -O private-openssh -o $student_dir"/"$new_student".pem"
chown $new_student:$user_grp $student_dir"/"$new_student".pem"

echo $new_student".ppk file is created in the same directory as the script file "$0
echo "Public OpenSSH file ectracted and added to "$student_dir"/authorized_keys"
echo "as well as "$student_dir"/"$new_student".pem file placed in the same directory."

# would be nice to include automatic sending the file to x00158589@compute.stu.it-tallaght.ie
#echo "Message Body Here" | mail -s "Subject Here" x00158589@outlook.com -A x00158589.ppk
